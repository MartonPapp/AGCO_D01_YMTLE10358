**** PAI-EXIT generated by MSB 28.11.2022 ***
**** DO NOT CHANGE / CHANGES WILL BE OVERWRITTEN ***
*
CLEAR VALUES .
READ TABLE VALUES WITH KEY COMPID = 'EDT_LAGP_LGPLA'.
IF sy-subrc = 0.
VALUES-CVALUE = EDT_LAGP_LGPLA .
IF EDT_LAGP_LGPLA  IS INITIAL.
CLEAR VALUES-CVALUE.
ENDIF.
MODIFY VALUES INDEX sy-tabix.
ELSE.
VALUES-COMPID = 'EDT_LAGP_LGPLA'.
VALUES-CVALUE = EDT_LAGP_LGPLA .
IF EDT_LAGP_LGPLA IS INITIAL.
CLEAR VALUES-CVALUE.
ENDIF.
APPEND VALUES.
ENDIF.
*
CLEAR VALUES .
READ TABLE VALUES WITH KEY COMPID = 'EDT_MARA_MATNR'.
IF sy-subrc = 0.
VALUES-CVALUE = EDT_MARA_MATNR .
IF EDT_MARA_MATNR  IS INITIAL.
CLEAR VALUES-CVALUE.
ENDIF.
MODIFY VALUES INDEX sy-tabix.
ELSE.
VALUES-COMPID = 'EDT_MARA_MATNR'.
VALUES-CVALUE = EDT_MARA_MATNR .
IF EDT_MARA_MATNR IS INITIAL.
CLEAR VALUES-CVALUE.
ENDIF.
APPEND VALUES.
ENDIF.
*
CLEAR VALUES .
READ TABLE VALUES WITH KEY COMPID = 'EDT_T301_LGTYP'.
IF sy-subrc = 0.
VALUES-CVALUE = EDT_T301_LGTYP .
IF EDT_T301_LGTYP  IS INITIAL.
CLEAR VALUES-CVALUE.
ENDIF.
MODIFY VALUES INDEX sy-tabix.
ELSE.
VALUES-COMPID = 'EDT_T301_LGTYP'.
VALUES-CVALUE = EDT_T301_LGTYP .
IF EDT_T301_LGTYP IS INITIAL.
CLEAR VALUES-CVALUE.
ENDIF.
APPEND VALUES.
ENDIF.
*
CLEAR VALUES .
READ TABLE VALUES WITH KEY COMPID = 'RBT_DAMGD_LABEL'.
IF sy-subrc = 0.
VALUES-CVALUE = RBT_DAMGD_LABEL .
IF RBT_DAMGD_LABEL  IS INITIAL.
CLEAR VALUES-CVALUE.
ENDIF.
MODIFY VALUES INDEX sy-tabix.
ELSE.
VALUES-COMPID = 'RBT_DAMGD_LABEL'.
VALUES-CVALUE = RBT_DAMGD_LABEL .
IF RBT_DAMGD_LABEL IS INITIAL.
CLEAR VALUES-CVALUE.
ENDIF.
APPEND VALUES.
ENDIF.
*
CLEAR VALUES .
READ TABLE VALUES WITH KEY COMPID = 'RBT_DAMGD_RACK'.
IF sy-subrc = 0.
VALUES-CVALUE = RBT_DAMGD_RACK .
IF RBT_DAMGD_RACK  IS INITIAL.
CLEAR VALUES-CVALUE.
ENDIF.
MODIFY VALUES INDEX sy-tabix.
ELSE.
VALUES-COMPID = 'RBT_DAMGD_RACK'.
VALUES-CVALUE = RBT_DAMGD_RACK .
IF RBT_DAMGD_RACK IS INITIAL.
CLEAR VALUES-CVALUE.
ENDIF.
APPEND VALUES.
ENDIF.
*
CLEAR VALUES .
READ TABLE VALUES WITH KEY COMPID = 'RBT_INV_DISC'.
IF sy-subrc = 0.
VALUES-CVALUE = RBT_INV_DISC .
IF RBT_INV_DISC  IS INITIAL.
CLEAR VALUES-CVALUE.
ENDIF.
MODIFY VALUES INDEX sy-tabix.
ELSE.
VALUES-COMPID = 'RBT_INV_DISC'.
VALUES-CVALUE = RBT_INV_DISC .
IF RBT_INV_DISC IS INITIAL.
CLEAR VALUES-CVALUE.
ENDIF.
APPEND VALUES.
ENDIF.
*
  DATA: vl_globaldata TYPE /mobisys/msb_globaldata.
  DATA: sl_values TYPE /mobisys/msb_str_value_in.
  DATA: sl_comp_pai_xx TYPE /mobisys/msbcomp.
  DATA: tl_glda TYPE TABLE OF /mobisys/msbglda,
        sl_glda TYPE /mobisys/msbglda,
        vl_cdatatype TYPE /mobisys/msbcomp-cdatatype.
  LOOP AT values INTO sl_values.
    SELECT mandt appl tcode maskid compid cdatatype
      FROM /mobisys/msbcomp
      UP TO 1 ROWS
      INTO CORRESPONDING FIELDS OF sl_comp_pai_xx
      WHERE appl = i_appl
        AND tcode = i_tcode
        AND compid = sl_values-compid
        AND globaldata = 'X'
        AND active = 'X'
      ORDER BY PRIMARY KEY.
    ENDSELECT.
    IF sy-subrc = 0.
      sl_glda-deviceid  = i_deviceid.
      sl_glda-uname     = i_user.
      IF sl_comp_pai_xx-cdatatype <> 'CHAR'
       AND sl_comp_pai_xx-cdatatype <> 'STRING'.
        SHIFT sl_values-cvalue LEFT DELETING LEADING space.
      ENDIF.
      sl_glda-sessionid = i_session.
      sl_glda-compid    = sl_values-compid.
      sl_glda-value     = sl_values-cvalue.
      MODIFY /mobisys/msbglda FROM sl_glda.
    ENDIF.
  ENDLOOP.
* Historie f√ºllen
  IF NOT ( i_appl = e_appl and i_tcode = e_tcode AND i_mask = e_mask ).
    CALL FUNCTION '/MOBISYS/MSB_WRITE_HIST'
      EXPORTING
        vi_deviceid    = i_deviceid
        vi_sessionid   = i_session
        vi_appl        = i_appl
        vi_tcode       = i_tcode
        vi_maskid      = i_mask
        vi_uname       = i_user
        vi_next_appl   = e_appl
        vi_next_tcode  = e_tcode
        vi_next_maskid = e_mask
        vi_no_tra_log  = vl_no_transaction_log.
  ENDIF.
